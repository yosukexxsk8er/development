{
	// Place your snippets for python here. Each snippet is defined under a snippet name and has a prefix, body and 
	// description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the 
	// same ids are connected.
	// Example:
	// "Print to console": {
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }
	//C:\Users\phantasm\AppData\Roaming\Code\User\snippets\python.json
	"main": {
		"prefix": "my_main",
		"body": [
			"def main():",
			"    pass",
			"",
			"$1",
			"",
			"if __name__ == \"__main__\":",
			"    main()",
			""
		]
	}
	,"PySimpleGUI": {
		"prefix": "my_PySimpleGUI",
		"body": [
            "import PySimpleGUI as sg",
            "$1# ウィンドウのテーマ",
            "sg.theme('BlueMono')",
            "",
            "# ウィンドウのレイアウト",
            "layout = [",
            "        [sg.Text('コンボボックス')],",
            "        [sg.Combo(['one', 'two', 'three'], default_value=\"選択して下さい\", size=(30,1)) ]",
            "    ]",
            "",
            "# ウィンドウオブジェクトの作成",
            "window = sg.Window('title', layout, size=(300, 150))",
            "",
            "# イベントのループ",
            "while True:",
            "    # イベントの読み込み",
            "    event, values = window.read()",
            "    # ウィンドウの×ボタンクリックで終了",
            "    if event == sg.WIN_CLOSED:",
            "        break",
            "",
            "# ウィンドウ終了処理",
            "window.close()"
		]
	}
	,"class": {
		"prefix": "my_class",
		"body": [
            "class $1:",
            "    def __init__(self):",
            "        pass",
            ""
		]
	}
	,"print": {
		"prefix": "my_print",
		"body": [
            "print(f'$1')",
		]
	}
	,"info": {
		"prefix": "my_info",
		"body": [
            "self.logger.info(f'$1')",
		]
	}
	,"fopen": {
		"prefix": "my_fopen",
		"body": [
            "with open($1, 'r') as f:",
            "    for line in f:",
            "       print line",
            ""
		]
	}
	,"wb_open": {
		"prefix": "my_wb_open",
		"body": [
            "workbook=$1$excel_file",
            "worksheet=\"Sheet1\"",
            "wb = openpyxl.load_workbook(workbook)",
            "ws = wb[worksheet]",
            ""			
		]
	}
	,"ws2list": {
		"prefix": "my_ws2list",
		"body": [
            "$1table = []",
            "for row in ws[\"A1\":\"C3\"]:",
            "    values = []",
            "    for col in row:",
            "        values.append(col.value)",
            "    table.append(values)",
            ""			
		]
	}
	,"def": {
		"prefix": "my_def",
		"body": [
            "def $1():"
		]
	}
	,"except": {
		"prefix": "my_except",
		"body": [
            "except $1 as e:",
            "    msg = f''",
            ""
		]
	}


}
